{
  "timestamp": "2025-07-05T02:18:37.351Z",
  "duration": 6032,
  "summary": {
    "totalIssues": 1416,
    "highSeverity": 16,
    "mediumSeverity": 118,
    "lowSeverity": 189,
    "positivePractices": 1092
  },
  "categories": {
    "security": {
      "totalIssues": 49,
      "highSeverity": 6,
      "mediumSeverity": 42,
      "lowSeverity": 0,
      "issues": [
        {
          "type": "hardcoded_secret",
          "file": "test-security-issues.js",
          "line": 5,
          "severity": "high",
          "message": "Potential hardcoded secret detected",
          "code": "const password = \"mypassword123\";"
        },
        {
          "type": "hardcoded_secret",
          "file": "test-security-issues.js",
          "line": 6,
          "severity": "high",
          "message": "Potential hardcoded secret detected",
          "code": "const secret = \"super-secret-key\";"
        },
        {
          "type": "unsafe_eval",
          "file": "test-security-issues.js",
          "line": 9,
          "severity": "high",
          "message": "Unsafe eval or dynamic code execution detected",
          "code": "eval(\"console.log('This is dangerous')\");"
        },
        {
          "type": "unsafe_eval",
          "file": "test-security-issues.js",
          "line": 10,
          "severity": "high",
          "message": "Unsafe eval or dynamic code execution detected",
          "code": "setTimeout(\"console.log('Also dangerous')\", 1000);"
        },
        {
          "type": "unsafe_eval",
          "file": "test-security-issues.js",
          "line": 47,
          "severity": "high",
          "message": "Unsafe eval or dynamic code execution detected",
          "code": "setInterval(() => {"
        },
        {
          "type": "unsafe_eval",
          "file": "src/audits/security-audit.js",
          "line": 76,
          "severity": "high",
          "message": "Unsafe eval or dynamic code execution detected",
          "code": "if (line.includes('eval(') || line.includes('Function(') || line.includes('setTimeout(') || line.includes('setInterval(')) {"
        },
        {
          "type": "xss_vulnerability",
          "file": "test-security-issues.js",
          "line": 13,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('content').innerHTML = userInput;"
        },
        {
          "type": "xss_vulnerability",
          "file": "test-security-issues.js",
          "line": 14,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "element.outerHTML = '<div>' + data + '</div>';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 66,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "table.innerHTML = rows;"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 110,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "accordionButton.innerHTML = `"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 151,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "accordionContent.innerHTML = contentText;"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 175,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "accordionContainer.innerHTML = \"\";"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 620,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 622,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No ESLint results found.</div>';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 623,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('eslintPagination').innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 648,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 659,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 720,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 722,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No Stylelint results found.</div>';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 723,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('stylelintPagination').innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 747,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 758,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 816,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 822,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = toggleHtml;"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 826,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('npmPagination').innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 877,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "report/bundle.js",
          "line": 888,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 92,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.querySelector(\"#component-usage-table\").innerHTML = table;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 124,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "if (el) el.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 172,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 174,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No ESLint results found.</div>';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 175,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('eslintPagination').innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 200,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 211,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 272,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 274,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No Stylelint results found.</div>';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 275,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('stylelintPagination').innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 299,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 310,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 368,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 374,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "wrap.innerHTML = toggleHtml;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 378,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "document.getElementById('npmPagination').innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 429,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 440,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "pagDiv.innerHTML = html;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/helper.js",
          "line": 63,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "table.innerHTML = rows;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/helper.js",
          "line": 107,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "accordionButton.innerHTML = `"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/helper.js",
          "line": 148,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "accordionContent.innerHTML = contentText;"
        },
        {
          "type": "xss_vulnerability",
          "file": "src/dashboard-template/js/helper.js",
          "line": 172,
          "severity": "medium",
          "message": "Potential XSS vulnerability detected",
          "code": "accordionContainer.innerHTML = \"\";"
        },
        {
          "type": "no_vulnerabilities",
          "severity": "info",
          "message": "No known vulnerabilities found in dependencies",
          "positive": true
        }
      ]
    },
    "performance": {
      "totalIssues": 51,
      "highSeverity": 2,
      "mediumSeverity": 24,
      "lowSeverity": 25,
      "issues": [
        {
          "type": "inefficient_operation",
          "file": "test-security-issues.js",
          "line": 42,
          "severity": "low",
          "message": "Consider using forEach or for...of instead of traditional for loop",
          "code": "for (let i = 0; i < array.length; i++) { // Traditional for loop"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 175,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "accordionContainer.innerHTML = \"\";"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 620,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 622,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No ESLint results found.</div>';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 623,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "document.getElementById('eslintPagination').innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 648,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 720,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 722,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No Stylelint results found.</div>';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 723,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "document.getElementById('stylelintPagination').innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 747,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 816,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 826,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "document.getElementById('npmPagination').innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "report/bundle.js",
          "line": 877,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 172,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 174,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No ESLint results found.</div>';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 175,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "document.getElementById('eslintPagination').innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 200,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 272,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 274,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '<div class=\"text-gray-500 p-4\">No Stylelint results found.</div>';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 275,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "document.getElementById('stylelintPagination').innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 299,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 368,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "wrap.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 378,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "document.getElementById('npmPagination').innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 429,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "pagDiv.innerHTML = '';"
        },
        {
          "type": "inefficient_operation",
          "file": "src/dashboard-template/js/helper.js",
          "line": 172,
          "severity": "low",
          "message": "Consider using textContent for text-only content",
          "code": "accordionContainer.innerHTML = \"\";"
        },
        {
          "type": "memory_leak",
          "file": "test-security-issues.js",
          "line": 10,
          "severity": "medium",
          "message": "setTimeout used without clearTimeout - potential memory leak",
          "code": "setTimeout(\"console.log('Also dangerous')\", 1000);"
        },
        {
          "type": "memory_leak",
          "file": "test-security-issues.js",
          "line": 47,
          "severity": "high",
          "message": "setInterval used without clearInterval - potential memory leak",
          "code": "setInterval(() => {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 153,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "accordionButton.addEventListener(\"click\", () => {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 226,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "dashboardMainLink.addEventListener(\"click\", () => {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 395,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": ".addEventListener(\"click\", function (event) {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 408,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "dashboardMainLink.addEventListener(\"click\", (event) => {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 442,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": ".addEventListener(\"click\", async (event) => {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 466,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": ".addEventListener(\"click\", function (event) {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 576,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "window.addEventListener('DOMContentLoaded', async () => {"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 661,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.getElementById('eslintPrev')?.addEventListener('click', () => { if (eslintPage > 1) { eslintPage--; renderEslintTable(); } });"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 759,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.getElementById('stylelintPrev')?.addEventListener('click', () => { if (stylelintPage > 1) { stylelintPage--; renderStylelintTable(); } });"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 889,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.getElementById('npmPrev')?.addEventListener('click', () => { if (npmPage > 1) { npmPage--; renderNpmTable(); } });"
        },
        {
          "type": "memory_leak",
          "file": "report/bundle.js",
          "line": 937,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.addEventListener(\"DOMContentLoaded\", () => {"
        },
        {
          "type": "memory_leak",
          "file": "src/audits/security-audit.js",
          "line": 76,
          "severity": "high",
          "message": "setInterval used without clearInterval - potential memory leak",
          "code": "if (line.includes('eval(') || line.includes('Function(') || line.includes('setTimeout(') || line.includes('setInterval(')) {"
        },
        {
          "type": "memory_leak",
          "file": "src/audits/security-audit.js",
          "line": 76,
          "severity": "medium",
          "message": "setTimeout used without clearTimeout - potential memory leak",
          "code": "if (line.includes('eval(') || line.includes('Function(') || line.includes('setTimeout(') || line.includes('setInterval(')) {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/main.js",
          "line": 11,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.addEventListener(\"DOMContentLoaded\", () => {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 128,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "window.addEventListener('DOMContentLoaded', async () => {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 213,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.getElementById('eslintPrev')?.addEventListener('click', () => { if (eslintPage > 1) { eslintPage--; renderEslintTable(); } });"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 311,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.getElementById('stylelintPrev')?.addEventListener('click', () => { if (stylelintPage > 1) { stylelintPage--; renderStylelintTable(); } });"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 441,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "document.getElementById('npmPrev')?.addEventListener('click', () => { if (npmPage > 1) { npmPage--; renderNpmTable(); } });"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 6,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": ".addEventListener(\"click\", function (event) {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/global.js",
          "line": 3,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "dashboardMainLink.addEventListener(\"click\", (event) => {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/helper.js",
          "line": 150,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "accordionButton.addEventListener(\"click\", () => {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/helper.js",
          "line": 223,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": "dashboardMainLink.addEventListener(\"click\", () => {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 10,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": ".addEventListener(\"click\", async (event) => {"
        },
        {
          "type": "memory_leak",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 6,
          "severity": "medium",
          "message": "Event listener added without removal - potential memory leak",
          "code": ".addEventListener(\"click\", function (event) {"
        }
      ]
    },
    "accessibility": {
      "totalIssues": 54,
      "highSeverity": 7,
      "mediumSeverity": 47,
      "lowSeverity": 0,
      "issues": [
        {
          "type": "missing_alt",
          "file": "test-security-issues.js",
          "line": 38,
          "severity": "high",
          "message": "Image missing alt attribute or has empty alt",
          "code": "const img = <img src=\"image.jpg\" />; // Missing alt"
        },
        {
          "type": "missing_alt",
          "file": "src/audits/accessibility-audit.js",
          "line": 22,
          "severity": "high",
          "message": "Image missing alt attribute or has empty alt",
          "code": "/<img[^>]*>/gi,"
        },
        {
          "type": "missing_alt",
          "file": "src/audits/accessibility-audit.js",
          "line": 23,
          "severity": "high",
          "message": "Image missing alt attribute or has empty alt",
          "code": "/<Image[^>]*>/gi,"
        },
        {
          "type": "skipped_heading",
          "file": "report/index.html",
          "line": 1,
          "severity": "medium",
          "message": "Heading level 2 used without previous level 1",
          "code": "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\" /> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /> <title>UI Insights Dashboard</title> <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\"> <script src=\"https://cdn.jsdelivr.net/npm/apexcharts\"></script> <link href=\"bundle.css\" rel=\"stylesheet\" type=\"text/css\" /> </head> <body class=\"bg-gray-100 min-h-screen\"> <!-- Header --> <header class=\"bg-white shadow p-4 flex items-center justify-between\"> <div class=\"flex items-center space-x-3\"> <svg width=\"40\" height=\"40\" viewBox=\"0 0 512 512\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <g fill=\"#2563eb\"><circle cx=\"256\" cy=\"256\" r=\"256\"/></g> <text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"white\" font-size=\"24\" font-family=\"Arial\" dy=\".3em\">UI</text> </svg> <span class=\"text-2xl font-bold text-blue-700\">UI Insights Dashboard</span> </div> <div id=\"projectMeta\" class=\"text-gray-500 text-sm\"></div> </header> <div class=\"flex flex-col md:flex-row\"> <!-- Sidebar --> <aside class=\"w-full md:w-64 bg-white shadow-md p-4 space-y-4\"> <nav> <ul class=\"space-y-2\" id=\"sidebarMenu\"> <li><a href=\"#\" id=\"mainPage\" class=\"block px-4 py-2 rounded hover:bg-blue-50 font-medium\">Dashboard</a></li> <li><a href=\"#\" id=\"jsAuditReport\" class=\"block px-4 py-2 rounded hover:bg-blue-50\">ESLint Report</a></li> <li><a href=\"#\" id=\"scssAuditReport\" class=\"block px-4 py-2 rounded hover:bg-blue-50\">Stylelint Report</a></li> <li><a href=\"#\" id=\"npmPackagesReport\" class=\"block px-4 py-2 rounded hover:bg-blue-50\">NPM Packages</a></li> </ul> </nav> </aside> <!-- Main Content --> <main class=\"flex-1 p-6 space-y-8\"> <!-- Overview Section (default) --> <section id=\"overviewSection\"> <h2 class=\"text-2xl font-semibold mb-4\">Overview</h2> <div id=\"overviewCharts\" class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\"> <div class=\"bg-white rounded-lg shadow p-4 flex flex-col items-center\"> <div id=\"overviewEslintChart\" class=\"w-full h-64\"></div> <div class=\"mt-2 text-gray-700 font-medium\">ESLint Summary</div> <div id=\"overviewEslintTotal\" class=\"mt-1 text-sm text-gray-500\"></div> </div> <div class=\"bg-white rounded-lg shadow p-4 flex flex-col items-center\"> <div id=\"overviewStylelintChart\" class=\"w-full h-64\"></div> <div class=\"mt-2 text-gray-700 font-medium\">Stylelint Summary</div> <div id=\"overviewStylelintTotal\" class=\"mt-1 text-sm text-gray-500\"></div> </div> <div class=\"bg-white rounded-lg shadow p-4 flex flex-col items-center\"> <div id=\"overviewNpmChart\" class=\"w-full h-64\"></div> <div class=\"mt-2 text-gray-700 font-medium\">NPM Packages</div> <div id=\"overviewNpmTotal\" class=\"mt-1 text-sm text-gray-500\"></div> </div> </div> </section> <!-- ESLint Section --> <section id=\"eslintSection\" class=\"hidden\"> <h2 class=\"text-xl font-semibold mb-4 flex items-center space-x-2\"><span>ESLint Report</span></h2> <div class=\"mb-4 flex flex-col md:flex-row md:items-center md:justify-between\"> <input id=\"eslintSearch\" type=\"text\" placeholder=\"Search files...\" class=\"mb-2 md:mb-0 px-3 py-2 border rounded w-full md:w-1/3\" /> <div id=\"eslintPagination\" class=\"mt-2 md:mt-0\"></div> </div> <div id=\"eslintTableWrap\" class=\"overflow-x-auto\"></div> </section> <!-- Stylelint Section --> <section id=\"stylelintSection\" class=\"hidden\"> <h2 class=\"text-xl font-semibold mb-4 flex items-center space-x-2\"><span>Stylelint Report</span></h2> <div class=\"mb-4 flex flex-col md:flex-row md:items-center md:justify-between\"> <input id=\"stylelintSearch\" type=\"text\" placeholder=\"Search files...\" class=\"mb-2 md:mb-0 px-3 py-2 border rounded w-full md:w-1/3\" /> <div id=\"stylelintPagination\" class=\"mt-2 md:mt-0\"></div> </div> <div id=\"stylelintTableWrap\" class=\"overflow-x-auto\"></div> </section> <!-- NPM Packages Section --> <section id=\"npmSection\" class=\"hidden\"> <h2 class=\"text-xl font-semibold mb-4 flex items-center space-x-2\"><span>NPM Packages</span></h2> <div class=\"mb-4 flex flex-col md:flex-row md:items-center md:justify-between\"> <input id=\"npmSearch\" type=\"text\" placeholder=\"Search packages...\" class=\"mb-2 md:mb-0 px-3 py-2 border rounded w-full md:w-1/3\" /> <div id=\"npmPagination\" class=\"mt-2 md:mt-0\"></div> </div> <div id=\"npmTableWrap\" class=\"overflow-x-auto\"></div> </section> <!-- Loading/Error Message --> <div id=\"dashboardMessage\" class=\"text-center text-gray-500\"></div> </main> </div> <script src=\"bundle.js\"></script> </body> </html>"
        },
        {
          "type": "skipped_heading",
          "file": "src/dashboard-template/index.html",
          "line": 39,
          "severity": "medium",
          "message": "Heading level 2 used without previous level 1",
          "code": "<h2 class=\"text-2xl font-semibold mb-4\">Overview</h2>"
        },
        {
          "type": "skipped_heading",
          "file": "src/dashboard-template/index.html",
          "line": 60,
          "severity": "medium",
          "message": "Heading level 2 used without previous level 1",
          "code": "<h2 class=\"text-xl font-semibold mb-4 flex items-center space-x-2\"><span>ESLint Report</span></h2>"
        },
        {
          "type": "skipped_heading",
          "file": "src/dashboard-template/index.html",
          "line": 69,
          "severity": "medium",
          "message": "Heading level 2 used without previous level 1",
          "code": "<h2 class=\"text-xl font-semibold mb-4 flex items-center space-x-2\"><span>Stylelint Report</span></h2>"
        },
        {
          "type": "skipped_heading",
          "file": "src/dashboard-template/index.html",
          "line": 78,
          "severity": "medium",
          "message": "Heading level 2 used without previous level 1",
          "code": "<h2 class=\"text-xl font-semibold mb-4 flex items-center space-x-2\"><span>NPM Packages</span></h2>"
        },
        {
          "type": "skipped_heading",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 13,
          "severity": "medium",
          "message": "Heading level 3 used without previous level 2",
          "code": "<h3 class=\"text-2xl font-bold mt-8 mb-4 dark:text-white\">Top Used Components</h3>"
        },
        {
          "type": "skipped_heading",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 52,
          "severity": "medium",
          "message": "Heading level 3 used without previous level 2",
          "code": "<h3 class=\"text-2xl font-bold mt-8 mb-4 dark:text-white\">Least Used Components</h3>"
        },
        {
          "type": "missing_form_label",
          "file": "test-security-issues.js",
          "line": 39,
          "severity": "high",
          "message": "Form control missing proper labeling",
          "code": "const input = <input type=\"text\" />; // Missing label"
        },
        {
          "type": "missing_form_label",
          "file": "src/audits/accessibility-audit.js",
          "line": 115,
          "severity": "high",
          "message": "Form control missing proper labeling",
          "code": "/<input[^>]*>/gi,"
        },
        {
          "type": "missing_form_label",
          "file": "src/audits/accessibility-audit.js",
          "line": 116,
          "severity": "high",
          "message": "Form control missing proper labeling",
          "code": "/<textarea[^>]*>/gi,"
        },
        {
          "type": "missing_form_label",
          "file": "src/audits/accessibility-audit.js",
          "line": 117,
          "severity": "high",
          "message": "Form control missing proper labeling",
          "code": "/<select[^>]*>/gi,"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 153,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "accordionButton.addEventListener(\"click\", () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 226,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "dashboardMainLink.addEventListener(\"click\", () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 395,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": ".addEventListener(\"click\", function (event) {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 408,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "dashboardMainLink.addEventListener(\"click\", (event) => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 442,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": ".addEventListener(\"click\", async (event) => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 466,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": ".addEventListener(\"click\", function (event) {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 602,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('mainPage').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 661,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('eslintPrev')?.addEventListener('click', () => { if (eslintPage > 1) { eslintPage--; renderEslintTable(); } });",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 664,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "btn.addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 692,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('jsAuditReport').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 759,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('stylelintPrev')?.addEventListener('click', () => { if (stylelintPage > 1) { stylelintPage--; renderStylelintTable(); } });",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 762,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "btn.addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 788,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('scssAuditReport').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 856,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 856,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 863,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDevDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 863,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDevDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 889,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmPrev')?.addEventListener('click', () => { if (npmPage > 1) { npmPage--; renderNpmTable(); } });",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 892,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "btn.addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "report/bundle.js",
          "line": 913,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmPackagesReport').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 154,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('mainPage').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 213,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('eslintPrev')?.addEventListener('click', () => { if (eslintPage > 1) { eslintPage--; renderEslintTable(); } });",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 216,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "btn.addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 244,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('jsAuditReport').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 311,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('stylelintPrev')?.addEventListener('click', () => { if (stylelintPage > 1) { stylelintPage--; renderStylelintTable(); } });",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 314,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "btn.addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 340,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('scssAuditReport').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 408,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 408,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 415,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDevDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 415,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmDevDepBtn').onclick = () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 441,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmPrev')?.addEventListener('click', () => { if (npmPage > 1) { npmPage--; renderNpmTable(); } });",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 444,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "btn.addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 465,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "document.getElementById('npmPackagesReport').addEventListener('click', e => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 6,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": ".addEventListener(\"click\", function (event) {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/global.js",
          "line": 3,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "dashboardMainLink.addEventListener(\"click\", (event) => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/helper.js",
          "line": 150,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "accordionButton.addEventListener(\"click\", () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/helper.js",
          "line": 223,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": "dashboardMainLink.addEventListener(\"click\", () => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 10,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": ".addEventListener(\"click\", async (event) => {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        },
        {
          "type": "keyboard_navigation",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 6,
          "severity": "medium",
          "message": "Click handler without keyboard support",
          "code": ".addEventListener(\"click\", function (event) {",
          "recommendation": "Add keyboard event handlers or use semantic HTML elements"
        }
      ]
    },
    "modernPractices": {
      "totalIssues": 1257,
      "positivePractices": 1090,
      "highSeverity": 0,
      "mediumSeverity": 3,
      "lowSeverity": 164,
      "issues": [
        {
          "type": "es6_feature_used",
          "file": "rollup.config.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import scss from \"rollup-plugin-scss\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "rollup.config.js",
          "line": 4,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const plugins = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "rollup.config.js",
          "line": 10,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "transform: (content, path) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "rollup.config.js",
          "line": 28,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export default [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "rollup.config.js",
          "line": 35,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "plugins: [...plugins],",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "rollup.config.js",
          "line": 43,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "plugins: [...plugins],",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 4,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const apiKey = \"sk-1234567890abcdef\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 6,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const secret = \"super-secret-key\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 17,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const query = `SELECT * FROM users WHERE id = ${userId}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 17,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const query = `SELECT * FROM users WHERE id = ${userId}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 21,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const modernVariable = \"using const\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 23,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const templateLiteral = `Hello ${name}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 23,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const templateLiteral = `Hello ${name}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const response = await fetch('/api/data');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 33,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "useEffect(() => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 38,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const img = <img src=\"image.jpg\" />; // Missing alt",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 42,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 0; i < array.length; i++) { // Traditional for loop",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 47,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "setInterval(() => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "test-security-issues.js",
          "line": 52,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "describe('test suite', () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 10,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 10,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 12,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const response = await fetch(`./${reportType}-report.json`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 12,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const response = await fetch(`./${reportType}-report.json`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 14,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "showDashboardMessage(`No ${reportType} report found. Please generate the report first.`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 21,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "showDashboardMessage(`Error fetching ${reportType} report.`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 30,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const hideChartCards = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 30,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const hideChartCards = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 40,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const renderTable = (data, table) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 40,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const renderTable = (data, table) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 42,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const rows = data",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 77,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const createAccordionItem = (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 82,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 84,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionItem = document.createElement(\"div\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 87,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionButton = document.createElement(\"button\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 118,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionContent = document.createElement(\"div\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 121,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const contentText = `",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 153,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "accordionButton.addEventListener(\"click\", () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 167,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const renderAccordion = (data) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 167,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const renderAccordion = (data) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 169,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionContainer = document.getElementById(\"accordion\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 176,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "data.forEach((item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 177,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionItem = createAccordionItem(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 190,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const updateProgress = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 190,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const updateProgress = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 193,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "wrappers.forEach((wrapper) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 194,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const value = parseFloat(wrapper.dataset.value);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 196,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const arc = wrapper.querySelector(\".lh-gauge-arc\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 199,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const circumference = 2 * Math.PI * parseFloat(arc.getAttribute(\"r\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 202,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "arc.style.strokeDasharray = `${circumference} ${circumference}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 223,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const globalInit$1 = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 224,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dashboardMainLink = document.getElementById(\"mainPage\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 226,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "dashboardMainLink.addEventListener(\"click\", () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 236,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const showDashboardMessage = (message) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 236,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const showDashboardMessage = (message) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 256,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const chartInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 256,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const chartInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 257,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const getChartOptions = (error = 0, pass = 0, warning = 0) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 316,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const updateChartWithData = async (filename, element) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 316,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const updateChartWithData = async (filename, element) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 318,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const arr = Array.isArray(data) ? data : [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 320,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalErrors = arr.reduce(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 324,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalWarnings = arr.reduce(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 329,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalItems = arr.length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 331,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const fileWithErrors = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 331,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const fileWithErrors = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 337,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const percentageWithErrors = totalItems > 0 ? Math.floor(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 341,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const fileWithOnlyWarnings = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 341,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const fileWithOnlyWarnings = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 348,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const percentageOnlyWarnings = totalItems > 0 ? Math.floor(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 352,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const passFile = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 352,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const passFile = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 358,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const percentagePassFile = totalItems > 0 ? Math.floor((passFile / totalItems) * 100) : 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 360,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const chartContainer = document.getElementById(element);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 376,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const chart = new ApexCharts(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 392,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 392,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const eslintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 398,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmReport = document.getElementById(\"npmReport\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 406,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 406,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 408,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "dashboardMainLink.addEventListener(\"click\", (event) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 414,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const menuChecks = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 419,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "menuChecks.forEach(({ id, file }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 420,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "fetch(`./${file}`, { method: 'HEAD' })",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 421,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".then((res) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 423,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 427,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".catch(() => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 428,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 436,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageReportInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 436,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const packageReportInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 438,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmdevReportTable = document.getElementById(\"devpackagesInfo\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 442,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".addEventListener(\"click\", async (event) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 445,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionContent = document.getElementById(\"accordionContent\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 447,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmReportSection = document.getElementById(\"npmReport\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 452,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await fetchData(\"npm\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 463,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const stylelintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 463,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const stylelintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 469,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmReport = document.getElementById(\"npmReport\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 477,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const REPORTS = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 486,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "['overviewSection', ...REPORTS.map(r => r.section)].forEach(sec => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 486,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "['overviewSection', ...REPORTS.map(r => r.section)].forEach(sec => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 487,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(sec);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 490,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const showEl = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 496,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 502,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const metaDiv = document.getElementById('projectMeta');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 504,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "metaDiv.textContent = `Project Type: ${meta.projectType || 'N/A'} | Reports: ${(meta.reports || []).join(', ')}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 511,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintTotalEl = document.getElementById('overviewEslintTotal');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 513,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalFiles = eslintData.results.length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 515,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const warningFiles = Array.isArray(eslintData.results) ? eslintData.results.filter(f => f.errorCount === 0 && f.warningCount > 0).length : 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 517,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const options = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 524,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "if (eslintTotalEl) eslintTotalEl.textContent = `Total JS files: ${totalFiles}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 529,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const stylelintTotalEl = document.getElementById('overviewStylelintTotal');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 531,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalFiles = stylelintData.length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 533,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const warningFiles = stylelintData.filter(f => f.errorCount === 0 && f.warningCount > 0).length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 535,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const options = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 542,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "if (stylelintTotalEl) stylelintTotalEl.textContent = `Total CSS files: ${totalFiles}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 547,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmTotalEl = document.getElementById('overviewNpmTotal');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 549,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const depCount = Array.isArray(npmData.dependencies) ? npmData.dependencies.length : 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 551,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "if (npmTotalEl) npmTotalEl.textContent = `Total packages: ${depCount + devDepCount}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 560,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const res = await fetch(`./${type}-report.json`, { method: 'HEAD' });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 560,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const res = await fetch(`./${type}-report.json`, { method: 'HEAD' });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 569,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const tab = document.getElementById(report.id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 576,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "window.addEventListener('DOMContentLoaded', async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 578,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const reportExistence = {};",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 587,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintData = reportExistence['eslint'] ? await fetchData('eslint') : null;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 589,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmData = reportExistence['npm'] ? await fetchData('npm') : null;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 592,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let meta = null;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 602,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('mainPage').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 611,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let eslintFiltered = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 613,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ESLINT_PAGE_SIZE = 10;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 614,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let eslintSearchTerm = '';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 618,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const wrap = document.getElementById('eslintTableWrap');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 627,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const start = (eslintPage - 1) * ESLINT_PAGE_SIZE;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 629,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pageData = eslintFiltered.slice(start, end);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 631,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordion = document.createElement('div');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 633,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pageData.forEach(item => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 634,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const acc = window.createAccordionItem",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 645,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pagDiv = document.getElementById('eslintPagination');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 651,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalPages = Math.ceil(eslintFiltered.length / ESLINT_PAGE_SIZE);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 652,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<div class=\"flex space-x-1\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 653,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${eslintPage === 1 ? 'bg-gray-200' : 'bg-blue-100'}\" ${eslintPage === 1 ? 'disabled' : ''} id=\"eslintPrev\">Prev</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 654,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 1; i <= totalPages; i++) {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 655,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${eslintPage === i ? 'bg-blue-500 text-white' : 'bg-blue-100'}\" data-page=\"${i}\">${i}</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 657,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${eslintPage === totalPages ? 'bg-gray-200' : 'bg-blue-100'}\" ${eslintPage === totalPages ? 'disabled' : ''} id=\"eslintNext\">Next</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 661,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('eslintPrev')?.addEventListener('click', () => { if (eslintPage > 1) { eslintPage--; renderEslintTable(); } });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 663,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pagDiv.querySelectorAll('button[data-page]').forEach(btn => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 680,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const term = eslintSearchTerm.toLowerCase();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 688,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Promise.resolve().then(function () { return helper; }).then(mod => { window.createAccordionItem = mod.createAccordionItem; });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 692,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('jsAuditReport').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 701,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const searchInput = document.getElementById('eslintSearch');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 703,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "searchInput.addEventListener('input', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 712,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let stylelintFiltered = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 714,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const STYLELINT_PAGE_SIZE = 10;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 715,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let stylelintSearchTerm = '';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 718,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const wrap = document.getElementById('stylelintTableWrap');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 727,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const start = (stylelintPage - 1) * STYLELINT_PAGE_SIZE;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 729,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pageData = stylelintFiltered.slice(start, end);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 731,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordion = document.createElement('div');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 733,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pageData.forEach(item => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 734,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const acc = window.createAccordionItem",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 744,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pagDiv = document.getElementById('stylelintPagination');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 750,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalPages = Math.ceil(stylelintFiltered.length / STYLELINT_PAGE_SIZE);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 751,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<div class=\"flex space-x-1\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 752,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${stylelintPage === 1 ? 'bg-gray-200' : 'bg-blue-100'}\" ${stylelintPage === 1 ? 'disabled' : ''} id=\"stylelintPrev\">Prev</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 753,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 1; i <= totalPages; i++) {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 754,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${stylelintPage === i ? 'bg-blue-500 text-white' : 'bg-blue-100'}\" data-page=\"${i}\">${i}</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 756,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${stylelintPage === totalPages ? 'bg-gray-200' : 'bg-blue-100'}\" ${stylelintPage === totalPages ? 'disabled' : ''} id=\"stylelintNext\">Next</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 759,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('stylelintPrev')?.addEventListener('click', () => { if (stylelintPage > 1) { stylelintPage--; renderStylelintTable(); } });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 761,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pagDiv.querySelectorAll('button[data-page]').forEach(btn => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 777,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const term = stylelintSearchTerm.toLowerCase();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 785,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Promise.resolve().then(function () { return helper; }).then(mod => { window.createAccordionItem = mod.createAccordionItem; });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 788,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('scssAuditReport').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 796,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const searchInput = document.getElementById('stylelintSearch');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 798,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "searchInput.addEventListener('input', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 807,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let npmFiltered = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 809,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const NPM_PAGE_SIZE = 10;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 810,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let npmSearchTerm = '';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 814,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const wrap = document.getElementById('npmTableWrap');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 818,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let toggleHtml = '<div class=\"mb-4 flex space-x-2\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 819,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "toggleHtml += `<button id=\"npmDepBtn\" class=\"px-3 py-1 rounded ${npmType === 'dependencies' ? 'bg-blue-500 text-white' : 'bg-gray-200'}\">Dependencies</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 823,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dataArr = Array.isArray(npmData[npmType]) ? npmFiltered : [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 830,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const start = (npmPage - 1) * NPM_PAGE_SIZE;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 832,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pageData = dataArr.slice(start, end);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 834,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<table class=\"min-w-full bg-white rounded-lg overflow-hidden\"><thead><tr>' +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 842,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pageData.forEach(item => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 843,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<tr class=\"border-b border-gray-200 hover:bg-gray-100 ${item.deprecated === 'Deprecated' ? 'bg-red-100' : ''}\">` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 845,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`<td class=\"py-2 px-4\">${item.version}</td>` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 847,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`<td class=\"py-2 px-4\">${item.description}</td>` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 849,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`<td class=\"py-2 px-4\">${item.unpackedSize}</td>` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 856,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmDepBtn').onclick = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 863,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmDevDepBtn').onclick = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 873,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pagDiv = document.getElementById('npmPagination');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 875,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dataArr = Array.isArray(npmData[npmType]) ? npmFiltered : [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 880,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalPages = Math.ceil(dataArr.length / NPM_PAGE_SIZE);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 881,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<div class=\"flex space-x-1\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 882,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${npmPage === 1 ? 'bg-gray-200' : 'bg-blue-100'}\" ${npmPage === 1 ? 'disabled' : ''} id=\"npmPrev\">Prev</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 883,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 1; i <= totalPages; i++) {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 884,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${npmPage === i ? 'bg-blue-500 text-white' : 'bg-blue-100'}\" data-page=\"${i}\">${i}</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 886,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${npmPage === totalPages ? 'bg-gray-200' : 'bg-blue-100'}\" ${npmPage === totalPages ? 'disabled' : ''} id=\"npmNext\">Next</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 889,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmPrev')?.addEventListener('click', () => { if (npmPage > 1) { npmPage--; renderNpmTable(); } });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 891,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pagDiv.querySelectorAll('button[data-page]').forEach(btn => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 907,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const term = npmSearchTerm.toLowerCase();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 913,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmPackagesReport').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 921,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const searchInput = document.getElementById('npmSearch');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 923,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "searchInput.addEventListener('input', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "report/bundle.js",
          "line": 937,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.addEventListener(\"DOMContentLoaded\", () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 2,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import inquirer from 'inquirer';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 4,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 6,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { codeInsightInit } from \"../build/code-insight.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 9,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dependenciesByType = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 48,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packagePath = path.join(process.cwd(), 'node_modules', packageName);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 83,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Would you like to install all required dependencies for ${projectType}?`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 89,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const allDeps = dependenciesByType[projectType];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 95,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const deps = missingDeps.join(' ');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 96,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(`Installing missing dependencies: ${deps}`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "bin/index.js",
          "line": 98,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "execSync(`npm install --save-dev ${deps}`, { stdio: 'inherit' });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { promises as fs } from \"fs\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { AuditOrchestrator } from \"./audits/audit-orchestrator.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 5,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const configPath = process.argv[2];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const codeInsightInit = async (options = {}) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 27,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const codeInsightInit = async (options = {}) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 27,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const codeInsightInit = async (options = {}) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 54,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(`Project type selected: ${projectType}`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 75,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const auditCategories = ['security', 'performance', 'accessibility', 'modern-practices', 'testing', 'dependency'];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 79,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const orchestrator = new AuditOrchestrator('./report');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 88,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(`\\nRunning ${category} audit...`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/index.js",
          "line": 88,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(`\\nRunning ${category} audit...`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 4,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import path from \"path\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 6,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { execSync } from \"child_process\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 8,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { generateESLintReport } from \"./eslint/eslint-report.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 10,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { generateNpmPackageReport } from \"./packages-report/packagesReport.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 13,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const folderName = \"report\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 16,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const handleReportError = (message, error) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 16,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const handleReportError = (message, error) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 17,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.error(chalk.red(`${message}: ${error}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 25,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const createReportFolder = async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 25,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const createReportFolder = async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 27,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue(\"Copying static files...\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 42,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const bundleAnalyzerReport = async (webpackConfigFile, webpackBundleFolder) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 42,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const bundleAnalyzerReport = async (webpackConfigFile, webpackBundleFolder) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 46,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`Generating Bundle Analyser Report with webpackConfigFile:${webpackConfigFile} & webpackBundleFolder:${webpackBundleFolder}!`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 51,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`npx webpack --config ${webpackConfigFile} --profile --json > report/stats.json`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 54,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`npx webpack-bundle-analyzer report/stats.json ${webpackBundleFolder} --default-sizes stat --mode static --report report/bundle-report.html --no-open`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 72,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const generateComponentUsageReportWrapper = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 78,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 81,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue(\"Generating Component Usage report...\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 108,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const generateESLintReportWrapper = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 111,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 114,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue(\"Generating ESLint report...\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 136,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const generateStyleLintReportWrapper = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 139,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 142,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue(\"Generating Stylelint report...\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 161,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const generateNpmPackageReportWrapper = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 161,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const generateNpmPackageReportWrapper = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 163,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue(\"Generating npm packages report...\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 182,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const generateAllReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 190,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/main.js",
          "line": 205,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export default {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from \"fs\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { mkdir } from \"fs/promises\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 6,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const copyFile = (sourcePath, targetPath) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 6,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const copyFile = (sourcePath, targetPath) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 10,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const copyStaticFiles = async (folderPath) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 10,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const copyStaticFiles = async (folderPath) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 10,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const copyStaticFiles = async (folderPath) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 12,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const __filename = fileURLToPath(import.meta.url);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 15,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const sourcePath = path.join(__dirname, dist, \"index.html\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 18,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const mainJsSourcePath = path.join(__dirname, dist, \"bundle.js\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/utils.js",
          "line": 21,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const mainCssSourcePath = path.join(__dirname, dist, \"bundle.css\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import chalk from 'chalk';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 9,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class AccessibilityAudit {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 19,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Checking image accessibility...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 21,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const imagePatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 26,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 30,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 33,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 34,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "imagePatterns.forEach(pattern => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 35,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const matches = line.match(pattern);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 37,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "matches.forEach(match => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 53,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 62,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Checking heading structure...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 64,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const headingPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 73,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 77,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 80,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 81,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "headingPatterns.forEach((pattern, level) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 85,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const prevHeadingPattern = new RegExp(`<h${level}[^>]*>`, 'gi');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 85,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const prevHeadingPattern = new RegExp(`<h${level}[^>]*>`, 'gi');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 94,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Heading level ${level + 1} used without previous level ${level}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 103,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 112,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Checking form accessibility...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 114,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const formPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 120,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 124,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 127,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 129,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const matches = line.match(pattern);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 131,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "matches.forEach(match => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 133,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const hasLabel = match.includes('aria-label=') ||",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 152,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 161,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Checking color contrast...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 163,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const colorPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 170,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{css,scss,less,js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 174,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 177,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 178,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "colorPatterns.forEach(pattern => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 195,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 204,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Checking keyboard navigation...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 206,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const keyboardPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 212,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 216,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 219,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 220,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "keyboardPatterns.forEach(pattern => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 223,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const hasKeyboardSupport = line.includes('onKeyDown') ||",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 244,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 253,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Checking ARIA usage...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 255,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ariaPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 259,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 263,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 266,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 268,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const matches = line.match(pattern);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 270,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "matches.forEach(match => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 287,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 296,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Starting Accessibility Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import chalk from 'chalk';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { SecurityAudit } from './security-audit.js';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 7,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { AccessibilityAudit } from './accessibility-audit.js';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 9,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { TestingAudit } from './testing-audit.js';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 15,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class AuditOrchestrator {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 25,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🚀 Starting Comprehensive Code Audit...\\n'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const startTime = Date.now();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 31,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const auditPromises = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 32,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "this.runSecurityAudit().catch(error => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 36,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "this.runPerformanceAudit().catch(error => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 40,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "this.runAccessibilityAudit().catch(error => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 44,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "this.runModernPracticesAudit().catch(error => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 48,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "this.runTestingAudit().catch(error => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 52,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "this.runDependencyAudit().catch(error => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 89,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.values(this.auditResults.categories).forEach(category => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 115,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Running Security Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 116,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const securityAudit = new SecurityAudit(this.folderPath);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 124,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Running Performance Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 125,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const performanceAudit = new PerformanceAudit(this.folderPath);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 133,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('♿ Running Accessibility Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 134,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accessibilityAudit = new AccessibilityAudit(this.folderPath);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 142,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Running Modern Practices Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 143,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const modernPracticesAudit = new ModernPracticesAudit(this.folderPath);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 151,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Running Testing Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 152,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testingAudit = new TestingAudit(this.folderPath);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 160,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Running Dependency Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 161,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dependencyAudit = new DependencyAudit(this.folderPath);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 169,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('\\n📊 Generating Audit Report...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 171,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const reportPath = path.join(this.folderPath, 'comprehensive-audit-report.json');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 175,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.green(`✅ Comprehensive audit report saved to: ${reportPath}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 191,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.white(`\\n🔍 Total Issues Found: ${summary.totalIssues}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 193,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.yellow(`⚠️  Medium Severity: ${summary.mediumSeverity}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 195,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.green(`✅ Positive Practices: ${summary.positivePractices}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 201,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.entries(categories).forEach(([category, results]) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 202,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const icon = this.getCategoryIcon(category);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 204,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const high = results.highSeverity || 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 206,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const low = results.lowSeverity || 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 208,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.white(`${icon} ${category.charAt(0).toUpperCase() + category.slice(1)}:`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 220,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const icons = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 267,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const deprecatedCount = categories.modernPractices.issues?.filter(i => i.type === 'deprecated_pattern').length || 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 280,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const auditMethods = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 292,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "throw new Error(`Unknown audit category: ${category}`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { execSync } from 'child_process';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 9,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class DependencyAudit {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 19,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking for outdated dependencies...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 22,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const outdatedResult = execSync('npm outdated --json', {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 28,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const outdatedData = JSON.parse(outdatedResult);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 30,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.keys(outdatedData).forEach(packageName => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 31,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageInfo = outdatedData[packageName];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 39,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `${packageName} is outdated (current: ${packageInfo.current}, latest: ${packageInfo.latest})`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 47,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const output = error.stdout.toString();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 51,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach(line => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 52,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const match = line.match(/^(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 63,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `${packageName} is outdated (current: ${current}, latest: ${latest})`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 82,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking for duplicate dependencies...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 85,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 86,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const allDeps = { ...packageJson.dependencies, ...packageJson.devDependencies };",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 88,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageNames = Object.keys(allDeps);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 92,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "duplicates.forEach(duplicate => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 97,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Duplicate dependency found: ${duplicate}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 111,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking for unused dependencies...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 115,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const depcheckResult = execSync('npx depcheck --json', {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 121,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const depcheckData = JSON.parse(depcheckResult);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 124,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "depcheckData.dependencies.forEach(dep => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 129,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Unused dependency: ${dep}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 136,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "depcheckData.devDependencies.forEach(dep => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 141,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Unused dev dependency: ${dep}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 155,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking for missing dependencies...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 158,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 159,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const allDeps = { ...packageJson.dependencies, ...packageJson.devDependencies };",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 173,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.keys(allDeps).forEach(packageName => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 174,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packagePath = path.join('node_modules', packageName);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 180,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Package ${packageName} is missing from node_modules`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 194,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking peer dependencies...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 197,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 200,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.keys(packageJson.peerDependencies).forEach(peerDep => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 201,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const requiredVersion = packageJson.peerDependencies[peerDep];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 204,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packagePath = path.join('node_modules', peerDep);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 211,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Peer dependency ${peerDep}@${requiredVersion} is not installed`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 226,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking dependency sizes...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 229,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 230,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const allDeps = { ...packageJson.dependencies, ...packageJson.devDependencies };",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 233,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const largePackages = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 239,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "largePackages.forEach(pkg => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 245,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Large dependency detected: ${pkg}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 259,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Checking license compliance...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 262,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 275,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const licenseResult = execSync('npx license-checker --json', {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 281,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const licenseData = JSON.parse(licenseResult);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 283,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const problematicLicenses = ['GPL', 'AGPL', 'LGPL'];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 285,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.keys(licenseData).forEach(packageName => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 286,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageInfo = licenseData[packageName];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 288,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "problematicLicenses.forEach(license => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 295,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Package ${packageName} uses ${packageInfo.licenses} license`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 314,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('📦 Starting Dependency Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import chalk from 'chalk';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 9,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class ModernPracticesAudit {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 19,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Checking ES6+ features usage...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 21,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const es6Patterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 59,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 63,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 66,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 67,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "es6Patterns.forEach(({ pattern, name, positive }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 76,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Modern ${name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 85,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 94,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Checking for deprecated patterns...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 96,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const deprecatedPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 124,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 128,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 131,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 132,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "deprecatedPatterns.forEach(({ pattern, message, severity }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 146,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 155,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Checking TypeScript features...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 157,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const tsPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 185,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{ts,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 189,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 192,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 193,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "tsPatterns.forEach(({ pattern, name, positive }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 201,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `TypeScript ${name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 210,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 219,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Checking React hooks usage...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 221,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const hookPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 254,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 258,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 261,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 262,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "hookPatterns.forEach(({ pattern, name, positive }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 270,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `React ${name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 279,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 288,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Checking async/await usage...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 290,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const asyncPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 313,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 317,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 320,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 321,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "asyncPatterns.forEach((pattern) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 329,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Modern ${pattern.name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 347,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 356,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Checking modern CSS features...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 358,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const cssPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 386,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{css,scss,less}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 390,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 393,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 394,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "cssPatterns.forEach(({ pattern, name, positive }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 402,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Modern CSS ${name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 411,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 420,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔄 Starting Modern Practices Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { execSync } from 'child_process';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { globby } from 'globby';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 10,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class PerformanceAudit {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 20,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Checking bundle sizes...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 23,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 32,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const buildDirs = ['dist', 'build', 'out'];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 35,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby([`${dir}/**/*.{js,css}`]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 35,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const files = await globby([`${dir}/**/*.{js,css}`]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 36,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let totalSize = 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 39,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const stats = fs.statSync(file);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 43,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const sizeInMB = (totalSize / (1024 * 1024)).toFixed(2);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 49,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Bundle size is ${sizeInMB}MB, consider code splitting`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 68,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Checking for inefficient operations...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 70,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const inefficientPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 73,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "message: 'Consider using forEach or for...of instead of traditional for loop',",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 98,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 102,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 105,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 106,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "inefficientPatterns.forEach(({ pattern, message, severity }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 120,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 129,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Checking for potential memory leaks...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 131,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const memoryLeakPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 149,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 153,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 156,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 157,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "memoryLeakPatterns.forEach(({ pattern, message, severity }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 171,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 180,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Checking for large dependencies...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 183,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 184,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const allDeps = { ...packageJson.dependencies, ...packageJson.devDependencies };",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 187,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const largePackages = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 192,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "largePackages.forEach(pkg => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 198,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Large dependency detected: ${pkg}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 212,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Checking for unused code...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 216,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintResult = execSync('npx eslint . --ext .js,.ts,.jsx,.tsx --format json', {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 222,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintData = JSON.parse(eslintResult);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 224,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "eslintData.forEach(file => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 225,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "file.messages.forEach(message => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 247,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('⚡ Starting Performance Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { execSync } from 'child_process';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { globby } from 'globby';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 11,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class SecurityAudit {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 21,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Checking for hardcoded secrets...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 23,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const secretPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 33,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,json,env}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 34,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} files for secrets...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 34,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} files for secrets...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 38,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 41,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 42,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "secretPatterns.forEach(pattern => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 56,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 65,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Checking for unsafe eval usage...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 67,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 68,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for unsafe eval...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 68,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for unsafe eval...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 72,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 75,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 88,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 97,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Checking for XSS vulnerabilities...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 99,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const xssPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 106,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 107,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for XSS vulnerabilities...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 107,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for XSS vulnerabilities...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 111,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 114,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 129,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 138,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Checking for SQL injection patterns...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 140,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const sqlPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 146,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 147,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for SQL injection patterns...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 147,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for SQL injection patterns...`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 151,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 154,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 169,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 178,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Checking for dependency vulnerabilities...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 182,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const auditResult = execSync('npm audit --json', {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 187,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const auditData = JSON.parse(auditResult);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 190,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.keys(auditData.vulnerabilities).forEach(packageName => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 191,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const vuln = auditData.vulnerabilities[packageName];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 196,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Vulnerability in ${packageName}: ${vuln.title || 'Unknown vulnerability'}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 213,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const output = error.stdout.toString();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 217,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "Object.keys(auditData.vulnerabilities).forEach(packageName => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 218,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const vuln = auditData.vulnerabilities[packageName];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 223,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Vulnerability in ${packageName}: ${vuln.title || 'Unknown vulnerability'}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 241,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🔒 Starting Security Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 249,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const results = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 261,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const reportPath = path.join(this.folderPath, 'security-audit-report.json');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 263,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.green(`✅ Security audit report saved to: ${reportPath}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 271,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.white(`Total Issues: ${results.totalIssues}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 273,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.yellow(`Medium Severity: ${results.mediumSeverity}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 275,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.green(`Info/Positive: ${results.infoIssues}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from 'fs';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { execSync } from 'child_process';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { globby } from 'globby';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 10,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export class TestingAudit {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 20,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Checking test files...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 22,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 30,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testFiles = await globby(testPatterns, { ignore: ['node_modules/**', 'build/**', 'dist/**'] });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 43,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Found ${testFiles.length} test files`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 50,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 51,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const allDeps = { ...packageJson.dependencies, ...packageJson.devDependencies };",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 53,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testingFrameworks = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 59,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const foundFrameworks = testingFrameworks.filter(framework => allDeps[framework]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 72,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Testing frameworks detected: ${foundFrameworks.join(', ')}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 85,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Checking test coverage...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 89,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 92,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const coverageScripts = Object.keys(scripts).filter(script =>",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 98,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const coverageScript = coverageScripts[0];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 99,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "execSync(`npm run ${coverageScript}`, { stdio: 'pipe' });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 102,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const coverageDirs = ['coverage', '.nyc_output'];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 139,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Checking testing patterns...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 141,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 179,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testFiles = await globby([",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 189,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 192,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 193,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "testPatterns.forEach(({ pattern, name, positive }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 201,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Testing ${name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 210,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read test file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 219,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Checking mocking patterns...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 221,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const mockPatterns = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 259,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const testFiles = await globby([",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 269,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const content = fs.readFileSync(file, 'utf8');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 272,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "lines.forEach((line, index) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 273,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "mockPatterns.forEach(({ pattern, name, positive }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 281,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `${name} detected`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 290,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.warn(chalk.yellow(`Warning: Could not read test file ${file}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 299,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Checking E2E testing setup...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 302,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 303,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const allDeps = { ...packageJson.dependencies, ...packageJson.devDependencies };",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 305,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const e2eFrameworks = ['cypress', 'playwright', 'puppeteer', 'selenium-webdriver'];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 319,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `E2E testing framework detected: ${foundE2EFrameworks.join(', ')}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 332,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Checking test configuration...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 334,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const configFiles = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 342,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const foundConfigs = configFiles.filter(file => fs.existsSync(file));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 355,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "message: `Test configuration files found: ${foundConfigs.join(', ')}`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 365,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.blue('🧪 Starting Testing Audit...'));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { writeFile } from \"fs/promises\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { makeAPIRequest } from \"./get-aem-data\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 5,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const generateComponentUsageReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const generateComponentUsageReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 12,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 13,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await makeAPIRequest(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fetch from \"node-fetch\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export async function makeAPIRequest(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 10,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const componentListQuery = new URLSearchParams();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 16,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const componentQueryURL = `${aemBasePath}/bin/querybuilder.json?${componentListQuery.toString()}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 16,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const componentQueryURL = `${aemBasePath}/bin/querybuilder.json?${componentListQuery.toString()}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 19,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const headers = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 20,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "Cookie: `login-token=${accessToken}`, // Set the access token as a cookie",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 24,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const response = await fetch(componentQueryURL, { headers });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await response.json();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 29,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let result = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 31,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const componentPropertiesQuery = new URLSearchParams();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 37,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`${slingResourceTypeBase}${component.name}`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 42,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const componentPropertiesURL = `${aemBasePath}/bin/querybuilder.json?${componentPropertiesQuery.toString()}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 42,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const componentPropertiesURL = `${aemBasePath}/bin/querybuilder.json?${componentPropertiesQuery.toString()}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 44,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const json = await resp.json();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/main.js",
          "line": 2,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { chartInit } from \"./js/chart-init\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/main.js",
          "line": 4,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { globalInit } from \"./js/global\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/main.js",
          "line": 6,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { stylelintDom } from \"./js/stylelint-dom\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/main.js",
          "line": 11,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.addEventListener(\"DOMContentLoaded\", () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { ESLint } from \"eslint\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { readFile, writeFile } from \"fs/promises\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { globby } from \"globby\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 7,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import chalk from \"chalk\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 10,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const CONFIG_FOLDER = \"config\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 12,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ESLINTRC_JS = \".eslintrc.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 14,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ESLINTRC = \".eslintrc\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 16,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ESLINTRC_NODE = \"eslintrc.node.json\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 18,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ESLINTRC_TS = \"eslintrc.typescript.json\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const getLintConfigFile = (recommendedLintRules, projectType = '') => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 27,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const getLintConfigFile = (recommendedLintRules, projectType = '') => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 29,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const __dirname = path.dirname(__filename);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 30,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let configFileName = ESLINTRC_JSON;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 44,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const configFilePath = path.join(__dirname, CONFIG_FOLDER, configFileName);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 50,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const recommendedLintRulesConfigFile = path.join(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 55,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const moduleDir = path.join(process.cwd(), \"node_modules\", \"ui-code-insight\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 62,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const configFiles = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 77,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const logError = (text) => console.log(chalk.red(text));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 83,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const logWarning = (text) => console.log(chalk.yellow(text));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 89,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const logSuccess = (text) => console.log(chalk.green(text));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 97,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintFile = async (filePath, eslint) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 97,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const lintFile = async (filePath, eslint) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 100,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await readFile(filePath, \"utf8\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 103,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const messages = await eslint.lintText(data, {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 122,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.error(chalk.red(`Error reading file ${filePath}: ${err}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 135,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintAllFiles = async (files, folderPath, eslint, projectType, reports) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 135,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const lintAllFiles = async (files, folderPath, eslint, projectType, reports) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 138,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`Total files count is ${files.length} This linting task will take some time.`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 141,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintPromises = files.map((filePath) => lintFile(filePath, eslint));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 144,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintResults = await Promise.all(lintPromises);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 167,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.error(chalk.red(`Error during JS linting:', ${error}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 179,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const generateESLintReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 179,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const generateESLintReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 185,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 186,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintConfigFile = getLintConfigFile(recommendedLintRules, projectType);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 191,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.blue(`Using ESLint config: ${lintConfigFile}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 193,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslint = new ESLint({",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 198,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby([...jsFilePathPattern]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 198,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const files = await globby([...jsFilePathPattern]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 199,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.blue(`📁 ESLint scanning ${files.length} files with pattern: ${jsFilePathPattern.join(', ')}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 201,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "files.slice(0, 10).forEach(file => console.log(chalk.gray(`  - ${file}`)));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 203,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "console.log(chalk.gray(`  ... and ${files.length - 10} more files`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 203,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.gray(`  ... and ${files.length - 10} more files`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import chalk from \"chalk\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import path from \"path\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 6,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const kbToMb = (kilobytes) => kilobytes / 1024;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 8,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const generateNpmPackageReport = async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 8,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const generateNpmPackageReport = async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 8,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const generateNpmPackageReport = async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 11,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await readFile(\"package.json\", \"utf8\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 13,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dependencies = packageJson?.dependencies || {};",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 15,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let npmPackagesData = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 20,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const processPackage = async (packageName, isDevDependency = false) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 20,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const processPackage = async (packageName, isDevDependency = false) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 21,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.log(chalk.green(`Validating ${packageName}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 23,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const response = await fetch(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 24,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`https://registry.npmjs.org/${packageName}`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageInfo = await response.json();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 38,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const packageData = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 45,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "? `${kbToMb(unpackedSize).toFixed(2)} MB`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 57,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "chalk.red(`Something went wrong with ${packageName} package`)",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 73,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`${folderPath}/npm-report.json`,",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import fs from \"fs\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import path from \"path\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 5,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import chalk from \"chalk\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 7,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fileURLToPath } from \"url\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 12,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const CONFIG_FOLDER = \"config\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 14,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const STYLELINTRC_JS = \".stylelintrc.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 16,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const STYLELINTRC_CONFIG = \"stylelint.config.js\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 23,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const getLintConfigFile = (recommendedLintRules) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 23,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const getLintConfigFile = (recommendedLintRules) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 25,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const __dirname = path.dirname(__filename);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 31,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const moduleDir = path.join(process.cwd(), \"node_modules\", \"ui-code-insight\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 34,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const configFiles = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 51,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const logError = (text) => console.log(chalk.red(text));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 57,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const logSuccess = (text) => console.log(chalk.green(text));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 65,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const handleFileReadError = (filePath, error) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 65,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const handleFileReadError = (filePath, error) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 66,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.error(chalk.red(`Error reading file ${filePath}: ${error}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 76,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintFile = async (filePath, lintStyleConfigFile) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 76,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const lintFile = async (filePath, lintStyleConfigFile) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 79,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await readFile(filePath, \"utf8\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 81,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const item = await lint({",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 86,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const output = JSON.parse(item.output);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 116,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintAllFiles = async (files, folderPath, lintStyleConfigFile) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 116,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const lintAllFiles = async (files, folderPath, lintStyleConfigFile) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 119,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`Total files count is ${files.length} This linting task will take some time.`",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 123,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintPromises = files.map((filePath) =>",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 128,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintResults = await Promise.all(lintPromises);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 135,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "console.error(chalk.red(`Error during Stylelinting:', ${error}`));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 145,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const generateStyleLintReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 145,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const generateStyleLintReport = async (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 149,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 150,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const lintStyleConfigFile = getLintConfigFile(recommendedLintRules);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 156,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const files = await globby([...scssFilePathPattern]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 156,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "const files = await globby([...scssFilePathPattern]);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fetchData } from \"./helper\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 3,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const chartInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 3,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const chartInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const chartInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 4,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const getChartOptions = (error = 0, pass = 0, warning = 0) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 63,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const updateChartWithData = async (filename, element) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 63,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const updateChartWithData = async (filename, element) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 65,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const arr = Array.isArray(data) ? data : [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 67,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalErrors = arr.reduce(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 71,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalWarnings = arr.reduce(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 76,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalItems = arr.length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 78,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const fileWithErrors = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 78,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const fileWithErrors = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 84,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const percentageWithErrors = totalItems > 0 ? Math.floor(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 88,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const fileWithOnlyWarnings = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 88,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const fileWithOnlyWarnings = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 95,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const percentageOnlyWarnings = totalItems > 0 ? Math.floor(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 99,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const passFile = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 99,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "const passFile = arr.reduce((acc, item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 105,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const percentagePassFile = totalItems > 0 ? Math.floor((passFile / totalItems) * 100) : 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 107,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const chartContainer = document.getElementById(element);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 123,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const chart = new ApexCharts(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fetchData } from \"./helper\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 3,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const componentUsageDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 3,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const componentUsageDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const componentUsageDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 5,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".then((data) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 8,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const table = `",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 27,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "${data.sort((a, b) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 66,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "${data.sort((a, b) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fetchData, showDashboardMessage } from './helper.js';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 3,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const REPORTS = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 12,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "['overviewSection', ...REPORTS.map(r => r.section)].forEach(sec => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 12,
          "severity": "info",
          "message": "Modern spread operator detected",
          "code": "['overviewSection', ...REPORTS.map(r => r.section)].forEach(sec => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 13,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(sec);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 16,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const showEl = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 22,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 28,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const metaDiv = document.getElementById('projectMeta');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 30,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "metaDiv.textContent = `Project Type: ${meta.projectType || 'N/A'} | Reports: ${(meta.reports || []).join(', ')}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 37,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintTotalEl = document.getElementById('overviewEslintTotal');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 39,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalFiles = eslintData.results.length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 41,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const warningFiles = Array.isArray(eslintData.results) ? eslintData.results.filter(f => f.errorCount === 0 && f.warningCount > 0).length : 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 43,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const options = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 50,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "if (eslintTotalEl) eslintTotalEl.textContent = `Total JS files: ${totalFiles}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 55,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const stylelintTotalEl = document.getElementById('overviewStylelintTotal');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 57,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalFiles = stylelintData.length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 59,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const warningFiles = stylelintData.filter(f => f.errorCount === 0 && f.warningCount > 0).length;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 61,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const options = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 68,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "if (stylelintTotalEl) stylelintTotalEl.textContent = `Total CSS files: ${totalFiles}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 73,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmTotalEl = document.getElementById('overviewNpmTotal');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 75,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const depCount = Array.isArray(npmData.dependencies) ? npmData.dependencies.length : 0;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 77,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "if (npmTotalEl) npmTotalEl.textContent = `Total packages: ${depCount + devDepCount}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 84,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const options = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 94,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const options = {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 106,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const res = await fetch(`./${type}-report.json`, { method: 'HEAD' });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 106,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const res = await fetch(`./${type}-report.json`, { method: 'HEAD' });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 115,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const tab = document.getElementById(report.id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 123,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 128,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "window.addEventListener('DOMContentLoaded', async () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 130,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const reportExistence = {};",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 139,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const eslintData = reportExistence['eslint'] ? await fetchData('eslint') : null;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 141,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmData = reportExistence['npm'] ? await fetchData('npm') : null;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 144,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let meta = null;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 154,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('mainPage').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 163,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let eslintFiltered = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 165,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const ESLINT_PAGE_SIZE = 10;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 166,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let eslintSearchTerm = '';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 170,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const wrap = document.getElementById('eslintTableWrap');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 179,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const start = (eslintPage - 1) * ESLINT_PAGE_SIZE;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 181,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pageData = eslintFiltered.slice(start, end);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 183,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordion = document.createElement('div');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 185,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pageData.forEach(item => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 186,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const acc = window.createAccordionItem",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 197,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pagDiv = document.getElementById('eslintPagination');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 203,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalPages = Math.ceil(eslintFiltered.length / ESLINT_PAGE_SIZE);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 204,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<div class=\"flex space-x-1\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 205,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${eslintPage === 1 ? 'bg-gray-200' : 'bg-blue-100'}\" ${eslintPage === 1 ? 'disabled' : ''} id=\"eslintPrev\">Prev</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 206,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 1; i <= totalPages; i++) {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 207,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${eslintPage === i ? 'bg-blue-500 text-white' : 'bg-blue-100'}\" data-page=\"${i}\">${i}</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 209,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${eslintPage === totalPages ? 'bg-gray-200' : 'bg-blue-100'}\" ${eslintPage === totalPages ? 'disabled' : ''} id=\"eslintNext\">Next</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 213,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('eslintPrev')?.addEventListener('click', () => { if (eslintPage > 1) { eslintPage--; renderEslintTable(); } });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 215,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pagDiv.querySelectorAll('button[data-page]').forEach(btn => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 232,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const term = eslintSearchTerm.toLowerCase();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 240,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "import('./helper.js').then(mod => { window.createAccordionItem = mod.createAccordionItem; });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 244,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('jsAuditReport').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 253,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const searchInput = document.getElementById('eslintSearch');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 255,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "searchInput.addEventListener('input', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 264,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let stylelintFiltered = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 266,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const STYLELINT_PAGE_SIZE = 10;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 267,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let stylelintSearchTerm = '';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 270,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const wrap = document.getElementById('stylelintTableWrap');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 279,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const start = (stylelintPage - 1) * STYLELINT_PAGE_SIZE;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 281,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pageData = stylelintFiltered.slice(start, end);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 283,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordion = document.createElement('div');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 285,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pageData.forEach(item => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 286,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const acc = window.createAccordionItem",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 296,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pagDiv = document.getElementById('stylelintPagination');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 302,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalPages = Math.ceil(stylelintFiltered.length / STYLELINT_PAGE_SIZE);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 303,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<div class=\"flex space-x-1\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 304,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${stylelintPage === 1 ? 'bg-gray-200' : 'bg-blue-100'}\" ${stylelintPage === 1 ? 'disabled' : ''} id=\"stylelintPrev\">Prev</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 305,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 1; i <= totalPages; i++) {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 306,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${stylelintPage === i ? 'bg-blue-500 text-white' : 'bg-blue-100'}\" data-page=\"${i}\">${i}</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 308,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${stylelintPage === totalPages ? 'bg-gray-200' : 'bg-blue-100'}\" ${stylelintPage === totalPages ? 'disabled' : ''} id=\"stylelintNext\">Next</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 311,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('stylelintPrev')?.addEventListener('click', () => { if (stylelintPage > 1) { stylelintPage--; renderStylelintTable(); } });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 313,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pagDiv.querySelectorAll('button[data-page]').forEach(btn => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 329,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const term = stylelintSearchTerm.toLowerCase();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 337,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "import('./helper.js').then(mod => { window.createAccordionItem = mod.createAccordionItem; });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 340,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('scssAuditReport').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 348,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const searchInput = document.getElementById('stylelintSearch');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 350,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "searchInput.addEventListener('input', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 359,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let npmFiltered = [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 361,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const NPM_PAGE_SIZE = 10;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 362,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let npmSearchTerm = '';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 366,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const wrap = document.getElementById('npmTableWrap');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 370,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let toggleHtml = '<div class=\"mb-4 flex space-x-2\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 371,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "toggleHtml += `<button id=\"npmDepBtn\" class=\"px-3 py-1 rounded ${npmType === 'dependencies' ? 'bg-blue-500 text-white' : 'bg-gray-200'}\">Dependencies</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 375,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dataArr = Array.isArray(npmData[npmType]) ? npmFiltered : [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 382,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const start = (npmPage - 1) * NPM_PAGE_SIZE;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 384,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pageData = dataArr.slice(start, end);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 386,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<table class=\"min-w-full bg-white rounded-lg overflow-hidden\"><thead><tr>' +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 394,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pageData.forEach(item => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 395,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<tr class=\"border-b border-gray-200 hover:bg-gray-100 ${item.deprecated === 'Deprecated' ? 'bg-red-100' : ''}\">` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 397,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`<td class=\"py-2 px-4\">${item.version}</td>` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 399,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`<td class=\"py-2 px-4\">${item.description}</td>` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 401,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "`<td class=\"py-2 px-4\">${item.unpackedSize}</td>` +",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 408,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmDepBtn').onclick = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 415,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmDevDepBtn').onclick = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 425,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const pagDiv = document.getElementById('npmPagination');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 427,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const dataArr = Array.isArray(npmData[npmType]) ? npmFiltered : [];",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 432,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const totalPages = Math.ceil(dataArr.length / NPM_PAGE_SIZE);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 433,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "let html = '<div class=\"flex space-x-1\">';",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 434,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${npmPage === 1 ? 'bg-gray-200' : 'bg-blue-100'}\" ${npmPage === 1 ? 'disabled' : ''} id=\"npmPrev\">Prev</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 435,
          "severity": "info",
          "message": "Modern let declarations detected",
          "code": "for (let i = 1; i <= totalPages; i++) {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 436,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${npmPage === i ? 'bg-blue-500 text-white' : 'bg-blue-100'}\" data-page=\"${i}\">${i}</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 438,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "html += `<button class=\"px-2 py-1 rounded ${npmPage === totalPages ? 'bg-gray-200' : 'bg-blue-100'}\" ${npmPage === totalPages ? 'disabled' : ''} id=\"npmNext\">Next</button>`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 441,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmPrev')?.addEventListener('click', () => { if (npmPage > 1) { npmPage--; renderNpmTable(); } });",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 443,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "pagDiv.querySelectorAll('button[data-page]').forEach(btn => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 459,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const term = npmSearchTerm.toLowerCase();",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 465,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "document.getElementById('npmPackagesReport').addEventListener('click', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 473,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const searchInput = document.getElementById('npmSearch');",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 475,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "searchInput.addEventListener('input', e => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fetchData, hideChartCards, renderAccordion } from \"./helper\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 3,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const eslintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 3,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const eslintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const eslintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 9,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmReport = document.getElementById(\"npmReport\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 1,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 1,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 3,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "dashboardMainLink.addEventListener(\"click\", (event) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 9,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const menuChecks = [",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 14,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "menuChecks.forEach(({ id, file }) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 15,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "fetch(`./${file}`, { method: 'HEAD' })",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 16,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".then((res) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 18,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 22,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".catch(() => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/global.js",
          "line": 23,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const el = document.getElementById(id);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 7,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 7,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 7,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 9,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const response = await fetch(`./${reportType}-report.json`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 9,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "const response = await fetch(`./${reportType}-report.json`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 11,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "showDashboardMessage(`No ${reportType} report found. Please generate the report first.`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 18,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "showDashboardMessage(`Error fetching ${reportType} report.`);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 27,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const hideChartCards = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 27,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const hideChartCards = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 27,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const hideChartCards = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 37,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const renderTable = (data, table) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 37,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const renderTable = (data, table) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 37,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const renderTable = (data, table) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 39,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const rows = data",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 74,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const createAccordionItem = (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 74,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const createAccordionItem = (",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 79,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ") => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 81,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionItem = document.createElement(\"div\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 84,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionButton = document.createElement(\"button\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 115,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionContent = document.createElement(\"div\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 118,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const contentText = `",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 150,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "accordionButton.addEventListener(\"click\", () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 164,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const renderAccordion = (data) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 164,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const renderAccordion = (data) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 164,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const renderAccordion = (data) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 166,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionContainer = document.getElementById(\"accordion\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 173,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "data.forEach((item) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 174,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionItem = createAccordionItem(",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 187,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const updateProgress = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 187,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const updateProgress = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 187,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const updateProgress = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 190,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "wrappers.forEach((wrapper) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 191,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const value = parseFloat(wrapper.dataset.value);",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 193,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const arc = wrapper.querySelector(\".lh-gauge-arc\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 196,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const circumference = 2 * Math.PI * parseFloat(arc.getAttribute(\"r\"));",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 199,
          "severity": "info",
          "message": "Modern template literals detected",
          "code": "arc.style.strokeDasharray = `${circumference} ${circumference}`;",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 220,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 220,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 220,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const globalInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 223,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "dashboardMainLink.addEventListener(\"click\", () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 233,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const showDashboardMessage = (message) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 233,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const showDashboardMessage = (message) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 233,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const showDashboardMessage = (message) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 2,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fetchData, hideChartCards, renderTable } from \"./helper\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 4,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const packageReportInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 4,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const packageReportInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 4,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const packageReportInit = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 6,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmdevReportTable = document.getElementById(\"devpackagesInfo\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 10,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": ".addEventListener(\"click\", async (event) => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 13,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const accordionContent = document.getElementById(\"accordionContent\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 15,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmReportSection = document.getElementById(\"npmReport\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 20,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const data = await fetchData(\"npm\");",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 1,
          "severity": "info",
          "message": "Modern ES6 imports detected",
          "code": "import { fetchData, hideChartCards, renderAccordion } from \"./helper\";",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 3,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "export const stylelintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 3,
          "severity": "info",
          "message": "Modern arrow functions detected",
          "code": "export const stylelintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 3,
          "severity": "info",
          "message": "Modern ES6 exports detected",
          "code": "export const stylelintDom = () => {",
          "positive": true
        },
        {
          "type": "es6_feature_used",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 9,
          "severity": "info",
          "message": "Modern const declarations detected",
          "code": "const npmReport = document.getElementById(\"npmReport\");",
          "positive": true
        },
        {
          "type": "deprecated_pattern",
          "file": "test-security-issues.js",
          "line": 9,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "eval(\"console.log('This is dangerous')\");"
        },
        {
          "type": "deprecated_pattern",
          "file": "test-security-issues.js",
          "line": 22,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "const arrowFunction = () => console.log(\"modern arrow function\");"
        },
        {
          "type": "deprecated_pattern",
          "file": "test-security-issues.js",
          "line": 26,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "async function fetchData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "test-security-issues.js",
          "line": 34,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(\"effect\");"
        },
        {
          "type": "deprecated_pattern",
          "file": "test-security-issues.js",
          "line": 43,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(array[i]);"
        },
        {
          "type": "deprecated_pattern",
          "file": "test-security-issues.js",
          "line": 48,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(\"interval\");"
        },
        {
          "type": "deprecated_pattern",
          "file": "bin/index.js",
          "line": 45,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function isPackageInstalled(packageName) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "bin/index.js",
          "line": 56,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterInstalledPackages(packages) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "bin/index.js",
          "line": 60,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "async function main() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "bin/index.js",
          "line": 93,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log('✅ All required dependencies are already installed!');"
        },
        {
          "type": "deprecated_pattern",
          "file": "bin/index.js",
          "line": 96,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(`Installing missing dependencies: ${deps}`);"
        },
        {
          "type": "deprecated_pattern",
          "file": "bin/index.js",
          "line": 99,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log('✅ Dependencies installed successfully!');"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 244,
          "severity": "medium",
          "message": "var declaration detected - use const or let instead",
          "code": "var helper = /*#__PURE__*/Object.freeze({"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 453,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(data);"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 485,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function showSection(id) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 494,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function setActiveSidebar(id) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 501,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderProjectMeta(meta) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 509,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderOverviewCharts(eslintData, stylelintData, npmData) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 558,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "async function reportExists(type) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 568,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function hideReportTabAndSection(report) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 617,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderEslintTable() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 644,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderEslintPagination() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 672,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterEslintData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 717,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderStylelintTable() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 743,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderStylelintPagination() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 769,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterStylelintData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 813,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderNpmTable() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 872,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderNpmPagination() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "report/bundle.js",
          "line": 899,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterNpmData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/index.js",
          "line": 34,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(\"Config file not available hence using default config\");"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/index.js",
          "line": 54,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(`Project type selected: ${projectType}`);"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/index.js",
          "line": 88,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(`\\nRunning ${category} audit...`);"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 27,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(\"Copying static files...\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 29,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(\"Static files copied successfully!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 44,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log("
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 56,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(\"Bundle Analyser Run!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 81,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(\"Generating Component Usage report...\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 90,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log("
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 94,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.bold.yellow(\"AEM Auth Token is missing!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 114,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(\"Generating ESLint report...\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 120,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(\"ESLint report generated successfully!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 122,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.bold.yellow(\"jsFilePathPattern is missing!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 142,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(\"Generating Stylelint report...\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 148,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(\"Stylelint report generated successfully!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 150,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.bold.yellow(\"scssFilePathPattern is missing!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 163,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(\"Generating npm packages report...\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/main.js",
          "line": 202,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.bold.green(\"Report generation completed!\"));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 19,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Checking image accessibility...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 62,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Checking heading structure...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 112,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Checking form accessibility...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 161,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Checking color contrast...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 204,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Checking keyboard navigation...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 253,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Checking ARIA usage...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/accessibility-audit.js",
          "line": 296,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Starting Accessibility Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 25,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🚀 Starting Comprehensive Code Audit...\\n'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 115,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Running Security Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 124,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Running Performance Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 133,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Running Accessibility Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 142,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Running Modern Practices Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 151,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Running Testing Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 160,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Running Dependency Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 169,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('\\n📊 Generating Audit Report...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 175,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(`✅ Comprehensive audit report saved to: ${reportPath}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 185,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('\\n📋 AUDIT SUMMARY'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 191,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.white(`\\n🔍 Total Issues Found: ${summary.totalIssues}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 193,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.yellow(`⚠️  Medium Severity: ${summary.mediumSeverity}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 195,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(`✅ Positive Practices: ${summary.positivePractices}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 198,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.white('\\n📊 Category Breakdown:'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 208,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.white(`${icon} ${category.charAt(0).toUpperCase() + category.slice(1)}:`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 235,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.white('\\n💡 RECOMMENDATIONS'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 242,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.red('🔒 Security: Address high-severity security issues immediately'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 247,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.yellow('⚡ Performance: Fix memory leaks and optimize bundle size'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 252,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('♿ Accessibility: Fix missing alt attributes and form labels'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 257,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.magenta('🧪 Testing: Add test files and testing framework'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 262,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.cyan('📦 Dependencies: Install missing dependencies and update outdated packages'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 269,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green('🔄 Modern Practices: Replace deprecated patterns with modern alternatives'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/audit-orchestrator.js",
          "line": 273,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.white('\\n📄 Detailed report saved to: comprehensive-audit-report.json'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 19,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking for outdated dependencies...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 82,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking for duplicate dependencies...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 111,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking for unused dependencies...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 155,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking for missing dependencies...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 194,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking peer dependencies...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 226,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking dependency sizes...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 259,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Checking license compliance...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/dependency-audit.js",
          "line": 314,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('📦 Starting Dependency Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 19,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Checking ES6+ features usage...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 94,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Checking for deprecated patterns...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 109,
          "severity": "medium",
          "message": "require() detected - consider using ES6 imports",
          "code": "message: 'require() detected - consider using ES6 imports',"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 114,
          "severity": "medium",
          "message": "module.exports detected - consider using ES6 exports",
          "code": "message: 'module.exports detected - consider using ES6 exports',"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 119,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "message: 'console.log detected - consider using proper logging',"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 155,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Checking TypeScript features...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 219,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Checking React hooks usage...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 288,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Checking async/await usage...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 356,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Checking modern CSS features...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 420,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔄 Starting Modern Practices Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/performance-audit.js",
          "line": 20,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Checking bundle sizes...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/performance-audit.js",
          "line": 68,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Checking for inefficient operations...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/performance-audit.js",
          "line": 129,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Checking for potential memory leaks...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/performance-audit.js",
          "line": 180,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Checking for large dependencies...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/performance-audit.js",
          "line": 212,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Checking for unused code...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/performance-audit.js",
          "line": 247,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('⚡ Starting Performance Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 21,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Checking for hardcoded secrets...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 34,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} files for secrets...`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 65,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Checking for unsafe eval usage...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 68,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for unsafe eval...`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 97,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Checking for XSS vulnerabilities...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 107,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for XSS vulnerabilities...`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 138,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Checking for SQL injection patterns...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 147,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.gray(`📁 Scanning ${files.length} JS/TS files for SQL injection patterns...`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 178,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Checking for dependency vulnerabilities...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 241,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🔒 Starting Security Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 263,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(`✅ Security audit report saved to: ${reportPath}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 269,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('\\n🔒 SECURITY AUDIT SUMMARY'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 271,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.white(`Total Issues: ${results.totalIssues}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 273,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.yellow(`Medium Severity: ${results.mediumSeverity}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/security-audit.js",
          "line": 275,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(`Info/Positive: ${results.infoIssues}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 20,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Checking test files...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 85,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Checking test coverage...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 139,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Checking testing patterns...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 219,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Checking mocking patterns...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 299,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Checking E2E testing setup...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 332,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Checking test configuration...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/audits/testing-audit.js",
          "line": 365,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue('🧪 Starting Testing Audit...'));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 77,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "const logError = (text) => console.log(chalk.red(text));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 83,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "const logWarning = (text) => console.log(chalk.yellow(text));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 89,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "const logSuccess = (text) => console.log(chalk.green(text));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 136,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log("
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 191,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(`Using ESLint config: ${lintConfigFile}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 199,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.blue(`📁 ESLint scanning ${files.length} files with pattern: ${jsFilePathPattern.join(', ')}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 201,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "files.slice(0, 10).forEach(file => console.log(chalk.gray(`  - ${file}`)));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/eslint/eslint-report.js",
          "line": 203,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.gray(`  ... and ${files.length - 10} more files`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/packages-report/packagesReport.js",
          "line": 21,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(chalk.green(`Validating ${packageName}`));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/packages-report/packagesReport.js",
          "line": 56,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log("
        },
        {
          "type": "deprecated_pattern",
          "file": "src/stylelint/stylelint-report.js",
          "line": 51,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "const logError = (text) => console.log(chalk.red(text));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/stylelint/stylelint-report.js",
          "line": 57,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "const logSuccess = (text) => console.log(chalk.green(text));"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/stylelint/stylelint-report.js",
          "line": 117,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log("
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 11,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function showSection(id) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 20,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function setActiveSidebar(id) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 27,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderProjectMeta(meta) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 35,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderOverviewCharts(eslintData, stylelintData, npmData) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 83,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderPieChart(containerId, error, warning, pass) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 93,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderBarChart(containerId, dep, devDep) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 104,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "async function reportExists(type) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 114,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function hideReportTabAndSection(report) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 122,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function safeSetInnerHTML(id, html) {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 169,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderEslintTable() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 196,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderEslintPagination() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 224,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterEslintData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 269,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderStylelintTable() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 295,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderStylelintPagination() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 321,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterStylelintData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 365,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderNpmTable() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 424,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function renderNpmPagination() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 451,
          "severity": "low",
          "message": "Function declaration detected - consider using arrow functions",
          "code": "function filterNpmData() {"
        },
        {
          "type": "deprecated_pattern",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 21,
          "severity": "low",
          "message": "console.log detected - consider using proper logging",
          "code": "console.log(data);"
        },
        {
          "type": "async_feature_used",
          "file": "test-security-issues.js",
          "line": 25,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "// Async/await (good example)",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "test-security-issues.js",
          "line": 26,
          "severity": "info",
          "message": "Modern async functions detected",
          "code": "async function fetchData() {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "test-security-issues.js",
          "line": 27,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const response = await fetch('/api/data');",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "bin/index.js",
          "line": 60,
          "severity": "info",
          "message": "Modern async functions detected",
          "code": "async function main() {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "bin/index.js",
          "line": 61,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const { projectType } = await inquirer.prompt([",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "bin/index.js",
          "line": 79,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const { installDeps } = await inquirer.prompt([",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "bin/index.js",
          "line": 108,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const { reports } = await inquirer.prompt([",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "bin/index.js",
          "line": 130,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await codeInsightInit({ projectType, reports });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 10,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 12,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const response = await fetch(`./${reportType}-report.json`);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 19,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await response.json();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 316,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const updateChartWithData = async (filename, element) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 317,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await fetchData(filename);",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "report/bundle.js",
          "line": 401,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((data) => renderAccordion(data))"
        },
        {
          "type": "promise_pattern",
          "file": "report/bundle.js",
          "line": 421,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((res) => {"
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 442,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": ".addEventListener(\"click\", async (event) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 452,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await fetchData(\"npm\");",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "report/bundle.js",
          "line": 472,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((data) => renderAccordion(data))"
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 558,
          "severity": "info",
          "message": "Modern async functions detected",
          "code": "async function reportExists(type) {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 560,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const res = await fetch(`./${type}-report.json`, { method: 'HEAD' });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 576,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "window.addEventListener('DOMContentLoaded', async () => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 580,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "reportExistence[report.type] = await reportExists(report.type);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 587,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const eslintData = reportExistence['eslint'] ? await fetchData('eslint') : null;",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "report/bundle.js",
          "line": 588,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const stylelintData = reportExistence['stylelint'] ? await fetchData('stylelint') : null;",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "report/bundle.js",
          "line": 688,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": "Promise.resolve().then(function () { return helper; }).then(mod => { window.createAccordionItem = mod.createAccordionItem; });"
        },
        {
          "type": "promise_pattern",
          "file": "report/bundle.js",
          "line": 785,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": "Promise.resolve().then(function () { return helper; }).then(mod => { window.createAccordionItem = mod.createAccordionItem; });"
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 27,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const codeInsightInit = async (options = {}) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 32,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "data = await fs.readFile(configPath, \"utf8\");",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 50,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await audit.createReportFolder();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 65,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await audit.generateESLintReport(jsFilePathPattern, recommendedLintRules, projectType, reports);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 68,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await audit.generateStyleLintReport(scssFilePathPattern, recommendedLintRules, projectType, reports);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 71,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await audit.generateNpmPackageReport(projectType, reports);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 83,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await orchestrator.runAllAudits();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/index.js",
          "line": 89,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await orchestrator.runSpecificAudit(category);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 25,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const createReportFolder = async () => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 28,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await copyStaticFiles(folderPath);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 42,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const bundleAnalyzerReport = async (webpackConfigFile, webpackBundleFolder) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 72,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const generateComponentUsageReportWrapper = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 82,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await generateComponentUsageReport(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 108,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const generateESLintReportWrapper = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 115,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await generateESLintReport(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 136,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const generateStyleLintReportWrapper = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 143,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await generateStyleLintReport(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 182,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const generateAllReport = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 191,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await generateESLintReportWrapper(jsFilePathPattern, recommendedLintRules);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/main.js",
          "line": 200,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await bundleAnalyzerReport(webpackConfigFile, webpackBundleFolder);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/utils.js",
          "line": 10,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const copyStaticFiles = async (folderPath) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/utils.js",
          "line": 14,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await mkdir(folderPath, { recursive: true });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 26,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 73,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 120,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 170,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{css,scss,less,js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 212,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 259,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,html}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 298,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkImageAccessibility();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 300,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkFormLabels();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/accessibility-audit.js",
          "line": 302,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkKeyboardNavigation();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 65,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "] = await Promise.all(auditPromises);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 98,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.generateAuditReport();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 117,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await securityAudit.runSecurityAudit();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 126,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await performanceAudit.runPerformanceAudit();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 135,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await accessibilityAudit.runAccessibilityAudit();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 144,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await modernPracticesAudit.runModernPracticesAudit();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 153,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await testingAudit.runTestingAudit();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 162,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await dependencyAudit.runDependencyAudit();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 174,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await writeFile(reportPath, JSON.stringify(this.auditResults, null, 2));",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/audit-orchestrator.js",
          "line": 290,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await auditMethods[category]();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 316,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkOutdatedDependencies();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 318,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkUnusedDependencies();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 320,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkPeerDependencies();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/dependency-audit.js",
          "line": 322,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkLicenseCompliance();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 59,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 124,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 185,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{ts,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 254,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 285,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "* Check for async/await usage",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 288,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "console.log(chalk.blue('🔄 Checking async/await usage...'));",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 293,
          "severity": "info",
          "message": "Modern async functions detected",
          "code": "name: 'async functions',",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 303,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "name: 'await keyword',",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "src/audits/modern-practices-audit.js",
          "line": 308,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": "message: 'Promise.then() detected - consider using async/await',"
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 313,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 386,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{css,scss,less}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 422,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkES6Features();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 424,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkTypeScriptFeatures();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/modern-practices-audit.js",
          "line": 426,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkAsyncAwait();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 35,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby([`${dir}/**/*.{js,css}`]);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 98,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 149,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 249,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkBundleSize();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 251,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkMemoryLeaks();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/performance-audit.js",
          "line": 253,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkUnusedCode();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 33,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx,json,env}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 67,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 106,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 146,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby(['**/*.{js,ts,jsx,tsx}', '!node_modules/**', '!build/**', '!dist/**']);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 243,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkForSecrets();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 245,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkXSSVulnerabilities();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 247,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkDependencyVulnerabilities();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/security-audit.js",
          "line": 262,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await writeFile(reportPath, JSON.stringify(results, null, 2));",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 30,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const testFiles = await globby(testPatterns, { ignore: ['node_modules/**', 'build/**', 'dist/**'] });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 179,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const testFiles = await globby([",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 259,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const testFiles = await globby([",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 367,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkTestFiles();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 369,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkTestingPatterns();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/audits/testing-audit.js",
          "line": 371,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await this.checkE2ETesting();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 5,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const generateComponentUsageReport = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 13,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await makeAPIRequest(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/component-usage-report.js",
          "line": 21,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await writeFile(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 3,
          "severity": "info",
          "message": "Modern async functions detected",
          "code": "export async function makeAPIRequest(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 24,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const response = await fetch(componentQueryURL, { headers });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 27,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await response.json();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 43,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const resp = await fetch(componentPropertiesURL, { headers });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/component-usage/get-aem-data.js",
          "line": 45,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "result.push(Object.assign({}, component, { usageCount: await json.total }));",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 97,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const lintFile = async (filePath, eslint) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 100,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await readFile(filePath, \"utf8\");",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 103,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const messages = await eslint.lintText(data, {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 135,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const lintAllFiles = async (files, folderPath, eslint, projectType, reports) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 144,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const lintResults = await Promise.all(lintPromises);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 162,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await writeFile(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 179,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const generateESLintReport = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 198,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby([...jsFilePathPattern]);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/eslint/eslint-report.js",
          "line": 205,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await lintAllFiles(files, folderPath, eslint, projectType, reports);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 8,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const generateNpmPackageReport = async () => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 11,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await readFile(\"package.json\", \"utf8\");",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 20,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const processPackage = async (packageName, isDevDependency = false) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 23,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const response = await fetch(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 27,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const packageInfo = await response.json();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 64,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await processPackage(packageName);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 69,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await processPackage(packageName, true);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/packages-report/packagesReport.js",
          "line": 72,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await writeFile(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 76,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const lintFile = async (filePath, lintStyleConfigFile) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 79,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await readFile(filePath, \"utf8\");",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 81,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const item = await lint({",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 116,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const lintAllFiles = async (files, folderPath, lintStyleConfigFile) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 128,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const lintResults = await Promise.all(lintPromises);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 130,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await fs.promises.writeFile(",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 145,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const generateStyleLintReport = async (",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 156,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const files = await globby([...scssFilePathPattern]);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/stylelint/stylelint-report.js",
          "line": 158,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "await lintAllFiles(files, folderPath, lintStyleConfigFile);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 63,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "const updateChartWithData = async (filename, element) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/chart-init.js",
          "line": 64,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await fetchData(filename);",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "src/dashboard-template/js/component-usage.js",
          "line": 5,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((data) => {"
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 104,
          "severity": "info",
          "message": "Modern async functions detected",
          "code": "async function reportExists(type) {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 106,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const res = await fetch(`./${type}-report.json`, { method: 'HEAD' });",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 128,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "window.addEventListener('DOMContentLoaded', async () => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 132,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "reportExistence[report.type] = await reportExists(report.type);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 139,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const eslintData = reportExistence['eslint'] ? await fetchData('eslint') : null;",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 140,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const stylelintData = reportExistence['stylelint'] ? await fetchData('stylelint') : null;",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 240,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": "import('./helper.js').then(mod => { window.createAccordionItem = mod.createAccordionItem; });"
        },
        {
          "type": "promise_pattern",
          "file": "src/dashboard-template/js/dashboard.js",
          "line": 337,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": "import('./helper.js').then(mod => { window.createAccordionItem = mod.createAccordionItem; });"
        },
        {
          "type": "promise_pattern",
          "file": "src/dashboard-template/js/eslint-dom.js",
          "line": 12,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((data) => renderAccordion(data))"
        },
        {
          "type": "promise_pattern",
          "file": "src/dashboard-template/js/global.js",
          "line": 16,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((res) => {"
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 7,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": "export const fetchData = async (reportType) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 9,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const response = await fetch(`./${reportType}-report.json`);",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/helper.js",
          "line": 16,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "return await response.json();",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 10,
          "severity": "info",
          "message": "Modern async arrow functions detected",
          "code": ".addEventListener(\"click\", async (event) => {",
          "positive": true
        },
        {
          "type": "async_feature_used",
          "file": "src/dashboard-template/js/packages-dom.js",
          "line": 20,
          "severity": "info",
          "message": "Modern await keyword detected",
          "code": "const data = await fetchData(\"npm\");",
          "positive": true
        },
        {
          "type": "promise_pattern",
          "file": "src/dashboard-template/js/stylelint-dom.js",
          "line": 12,
          "severity": "low",
          "message": "Promise.then() detected - consider using async/await",
          "code": ".then((data) => renderAccordion(data))"
        }
      ]
    },
    "testing": {
      "totalIssues": 5,
      "positivePractices": 2,
      "highSeverity": 1,
      "mediumSeverity": 2,
      "lowSeverity": 0,
      "issues": [
        {
          "type": "no_test_files",
          "severity": "high",
          "message": "No test files found",
          "recommendation": "Create test files with .test.js or .spec.js extensions"
        },
        {
          "type": "testing_framework_found",
          "severity": "info",
          "message": "Testing frameworks detected: puppeteer",
          "positive": true
        },
        {
          "type": "no_coverage_script",
          "severity": "medium",
          "message": "No test coverage script found",
          "recommendation": "Add a coverage script to package.json (e.g., \"test:coverage\": \"jest --coverage\")"
        },
        {
          "type": "e2e_framework_found",
          "severity": "info",
          "message": "E2E testing framework detected: puppeteer",
          "positive": true
        },
        {
          "type": "no_test_config",
          "severity": "medium",
          "message": "No test configuration file found",
          "recommendation": "Create a configuration file for your testing framework"
        }
      ]
    },
    "dependency": {
      "totalIssues": 0,
      "highSeverity": 0,
      "mediumSeverity": 0,
      "lowSeverity": 0,
      "issues": []
    }
  }
}